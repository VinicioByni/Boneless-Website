---
interface Props {
    image: ImageMetadata
    svgWidth: string
    svgHeight: string
}  

const { image, svgHeight, svgWidth} = Astro.props
---


<div class="image-container">
    <img src={image.src} ></img>
    <svg 
    xmlns="http://www.w3.org/2000/svg" 
    xmlns:xlink="http://www.w3.org/1999/xlink" 
    fill="#ffffff" width={svgWidth} height={svgHeight} 
    viewBox="0 0 32 32" version="1.1" xml:space="preserve">

    <g>
    
    <path d="M22.3,8.4c-0.8,0-1.4,0.6-1.4,1.4c0,0.8,0.6,1.4,1.4,1.4c0.8,0,1.4-0.6,1.4-1.4C23.7,9,23.1,8.4,22.3,8.4z"/>
    
    <path d="M16,10.2c-3.3,0-5.9,2.7-5.9,5.9s2.7,5.9,5.9,5.9s5.9-2.7,5.9-5.9S19.3,10.2,16,10.2z M16,19.9c-2.1,0-3.8-1.7-3.8-3.8   c0-2.1,1.7-3.8,3.8-3.8c2.1,0,3.8,1.7,3.8,3.8C19.8,18.2,18.1,19.9,16,19.9z"/>
    
    <path d="M20.8,4h-9.5C7.2,4,4,7.2,4,11.2v9.5c0,4,3.2,7.2,7.2,7.2h9.5c4,0,7.2-3.2,7.2-7.2v-9.5C28,7.2,24.8,4,20.8,4z M25.7,20.8   c0,2.7-2.2,5-5,5h-9.5c-2.7,0-5-2.2-5-5v-9.5c0-2.7,2.2-5,5-5h9.5c2.7,0,5,2.2,5,5V20.8z"/>
    
    </g>
    
    </svg>
</div>


    


<style>
    img {
		width: 100%;
		height: 100%;
		transform-origin: center center; 
		transition: .4s ease-in-out;
	}
    .image-container {
        position: relative;
		display: inline-block;
        width: 100%;
        height: 100%;
    }
    .image-container:hover svg{
        opacity: 100;
    }
    .image-container:hover img {
        transform: scale(1.03);
        filter: brightness(70%);
    }
    svg {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        opacity: 0;
        transition: opacity 0.4s ease-in-out;
    }

</style>